{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-03T14:22:28.708Z",
    "end": "2023-05-03T14:22:42.768Z",
    "duration": 14060,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "12fe37b6-3ea7-4297-825c-587fb7bf9752",
      "title": "",
      "fullFile": "/home/mahendiran/Desktop/E-Commerce/test/shopping.test.js",
      "file": "/test/shopping.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1ffa0440-b444-40a3-adcd-87311dd12a84",
          "title": "Shopping Test",
          "fullFile": "/home/mahendiran/Desktop/E-Commerce/test/shopping.test.js",
          "file": "/test/shopping.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Shopping Test\"",
              "fullTitle": "Shopping Test \"before all\" hook in \"Shopping Test\"",
              "timedOut": false,
              "duration": 1415,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "browser = await puppeteer.launch({headless:false});\npage = await browser.newPage();\nawait page.setViewport({\n  width: 1366,\n  height: 768,\n  deviceScaleFactor: 1,\n  isLandscape: true,\n});\n// loginPage = new LoginPage();\nshoppingPage = new ShoppingPage();",
              "err": {},
              "uuid": "1ab34665-7af0-46ad-ae92-cb9795a2a968",
              "parentUUID": "1ffa0440-b444-40a3-adcd-87311dd12a84",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Shopping Test\"",
              "fullTitle": "Shopping Test \"after all\" hook in \"Shopping Test\"",
              "timedOut": false,
              "duration": 609,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await browser.close();",
              "err": {},
              "uuid": "3bb1df4c-2df2-4aa8-b928-e7935b960d42",
              "parentUUID": "1ffa0440-b444-40a3-adcd-87311dd12a84",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should perform a shopping scenario",
              "fullTitle": "Shopping Test should perform a shopping scenario",
              "timedOut": false,
              "duration": 12011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const user = userFactory.createUser();\nawait shoppingPage.visit(page, process.env.BASE_URL);\nawait page.click('div.consentForm__acceptButtons div[data-accept-action=\"all\"] button');\nawait page.click(\"span.headerElement__icon.headerElement__icon--login\");\nawait shoppingPage.fillShoppingForm(page, user);\nawait shoppingPage.submitShoppingLoginForm(page);\nawait page.evaluate(() => {\n  const elements = document.querySelectorAll('span');\n  for (let element of elements) {\n    if (element.innerText === 'MÃ¶bel') {\n      element.click();\n      break;\n    }\n  }\n});\n// Add necessary navigation and actions to select five items randomly\n// and add them to the wishlist\n// await shoppingPage.addToWishlist(page, 'item-selector-1');\n// await shoppingPage.addToWishlist(page, 'item-selector-2');\n// await shoppingPage.addToWishlist(page, 'item-selector-3');\n// await shoppingPage.addToWishlist(page, 'item-selector-4');\n// await shoppingPage.addToWishlist(page, 'item-selector-5');\n// // Navigate to the wishlist, add all items to the basket, and verify\n// await shoppingPage.openWishlist(page);\n// await shoppingPage.addAllToBasketFromWishlist(page);\n// await shoppingPage.openBasket(page);\n// Add any necessary assertions to verify that the basket contains all\n// items selected and the merchandise value is correct (excluding shipping)",
              "err": {},
              "uuid": "408c777b-c3d9-4bc8-a5cf-549cd884d4fe",
              "parentUUID": "1ffa0440-b444-40a3-adcd-87311dd12a84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "408c777b-c3d9-4bc8-a5cf-549cd884d4fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12011,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "test-report",
        "reportTitle": "Automation Test Report",
        "inline": "true",
        "ts": "false",
        "headless": "false"
      },
      "version": "6.2.0"
    }
  }
}